services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: techstore-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - techstore-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U techstore_user -d techstore"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Spring Boot Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: techstore-api
    image: ludogoriesoft/techstore-api
    ports:
      - "8080:8080"
    env_file:
      - .env
    volumes:
      - ./lucene-indexes:/app/lucene-indexes
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - techstore-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

volumes:
  postgres_data:
  uploads_data:

networks:
  techstore-network:
    driver: bridge